@page
@model IndexModel
@inject IConfiguration configuration;
@{
    ViewData["Title"] = "Home page";

}

<div class="text-center">
    <h1 class="display-4">@AppConsts.APP_NAME</h1>
</div>
@if (User.Identity != null && User.Identity.IsAuthenticated)
{
    <div>
        <div class="row">
            <div>Joined as: <b> @User.Identity?.Name</b></div>
            <hr />

            <div class="row">
                <div class="">
                    <ul id="messageList" class="list-group list-group-flush">
                        @foreach (var item in Model.Chat)
                        {
                            <li class="list-group-item">
                                <strong>@(User.Identity?.Name == item.Owner ? "Me" : item.Owner)</strong>: @item.Content &nbsp;
                                <em>(@item.TimeStamp.ToString("g"))</em>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <hr />
        </div>
        <div>
            <form>
                <div class="row">
                    <div class="col-10">
                        <input type="text" id="message" class="form-control"
                                  autocomplete="off" autofocus placeholder="Type your message here..." />
                    </div>
                    <div class="col-2">
                        <input type="submit" id="sendButton" class="btn btn-success" value="Send" />
                    </div>
                </div>
            </form>
        </div>
    </div>
}
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    "use strict";
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .withAutomaticReconnect()
        .configureLogging(signalR.LogLevel.Information)
        .build();

    connection.on("ReceiveMessage", function (messageObj) {
        var msg = messageObj.content.replace(/[\u00A0-\u9999<>\&]/g, function (i) {
            return '&#' + i.charCodeAt(0) + ';';
        });
        var isMe = @Html.Raw(Json.Serialize(User.Identity?.Name)) == messageObj.owner;
        var encodedMsg = "<strong>" + (isMe ? "Me" : messageObj.owner) + "</strong>" + ": " + msg;
        var date = new Date(messageObj.timeStamp);
        encodedMsg += "&nbsp;<em>(" + date.toLocaleString("en-GB") + ")</em>";
        var li = document.createElement("li");
        li.className = "list-group-item";
        li.innerHTML = encodedMsg;
        document.getElementById("messageList").appendChild(li);
    });

    connection.on("JoinedMessage", function (username) {
        var myName = @Html.Raw(Json.Serialize(User.Identity?.Name));
        if (myName) {
            var joinedMsg = "<div style='opacity:0.6' class='text-center'>" + username + " joined the chat room</div>";
            var li = document.createElement("li");
            li.className = "list-group-item";
            li.innerHTML = joinedMsg;
            document.getElementById("messageList").appendChild(li);
        }
    });

    connection.start().then(function () {
        var myName = @Html.Raw(Json.Serialize(User.Identity?.Name));
        if (myName) {
            connection.invoke("SendJoinedMessage").then(function () {
            })
                .catch(function (err) {
                    console.log(err);
                });
        }
    });

    document.getElementById("sendButton")
        .addEventListener("click", function (evt) {
            var msg = document.getElementById("message").value;
            connection.invoke("SendMessage", msg)
                .then(function () {
                })
                .catch(function (err) {
                    console.log(err);
                });
            document.getElementById("message").value = "";
            evt.preventDefault();
        });
</script>